# Detect the cycle in the linkedlist, in the O(1) Memory space, 
# Its a simple problem 
# Two pointer, 
# One with one jump, second with two jumps.

# Coded in the python

### following is the code
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def hasCycle(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        # starting my internship journey please help all the good things in the world.
        
        temp = head
        if head == None:
            return False
        while head.next != None:
            if temp.next != None:
                if temp.next.next != None:
                    temp= temp.next.next;
                    if head == temp:
                        return True
            else:
                return False
            head = head.next
                
        return False
            
